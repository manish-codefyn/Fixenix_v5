# Generated by Django 4.2.17 on 2025-01-16 13:53

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DoorstepService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, help_text='Upload an image or icon for this service.', null=True, upload_to='service_images/')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Original price of the service', max_digits=10)),
                ('offer_price', models.DecimalField(blank=True, decimal_places=2, help_text='Discounted price of the service (if any)', max_digits=10, null=True)),
                ('is_available', models.BooleanField(default=True, help_text='Whether the service is currently available.')),
                ('is_premium', models.BooleanField(default=False, help_text='Whether this is a premium service.')),
                ('is_discountable', models.BooleanField(default=False, help_text='Whether discounts are applicable to this service.')),
                ('is_featured', models.BooleanField(default=False, help_text='Highlight this service as featured.')),
                ('features', models.TextField(blank=True, help_text='List the key features of this service.', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending Approval'), ('archived', 'Archived')], default='active', help_text='Current status of the service.', max_length=50)),
                ('rating', models.FloatField(default=0.0, help_text='Average rating of the service.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('review_count', models.PositiveIntegerField(default=0, help_text='Number of reviews for the service.')),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
