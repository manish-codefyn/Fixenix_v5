# Generated by Django 4.2.17 on 2025-01-16 13:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('employee', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('distance', models.DecimalField(decimal_places=2, help_text='Distance in kilometers', max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Price for the service', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('booking_id', models.CharField(blank=True, editable=False, help_text='Unique 10-15 digit booking ID', max_length=15, unique=True)),
                ('assigned_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bookings', to='employee.employee')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='services.doorstepservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceBrand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='bookings.device')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='bookings.devicebrand')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='bookings.device')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceProblem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='bookings.devicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Rate the service between 1 (worst) and 5 (best).')),
                ('comment', models.TextField(blank=True, help_text='Optional comment about the service.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='bookings.booking')),
            ],
        ),
        migrations.CreateModel(
            name='RepairService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_others_problem', models.TextField(blank=True, help_text='Optional about the device related problems.', null=True)),
                ('customer_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(max_length=15)),
                ('city', models.CharField(max_length=100)),
                ('otp_verified', models.BooleanField(default=False)),
                ('request_id', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('delivered', 'Delivered'), ('waiting', 'Waiting for Pickup')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repairs', to='bookings.device')),
                ('device_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repairs', to='bookings.devicebrand')),
                ('device_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repairs', to='bookings.devicemodel')),
                ('device_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repairs', to='bookings.deviceproblem')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('razorpay_order_id', models.CharField(max_length=255)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='bookings.booking')),
            ],
        ),
    ]
